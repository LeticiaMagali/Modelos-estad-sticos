## Ejemplo de la v.a. uniforme

Sea el experimento aleatorio de lanzar dos dados justos:
* $\Omega = \{1,2,3,4,5,6\}\times \{1,2,3,4,5,6\} $
* $\mathcal{F} = P(\Omega)$
* Para $w=(i,j)$ donde $i,j\in\{1,...,6\}$ talque
   $$\mathbb{P}( \{ \omega \} )=\frac{1}{36}$$

Vamos a definir a la siguiente variable aleatoria:
     $$S:\Omega \to R_{S}$$

donde $R_{S}=\{2,3,4,5,6,7,8,9,10,11,12\}$    

Para que entendamos la ley de una v.a., basta con entender los siguientes datos

$$\{(k,\mathbb{P}(S=k))\}_{k\in R_{S}}$$

Vamos a entender a $S$ como eventos.

Sea $S_{n}$ el evento la suma de las caras es $n$.

$$S_{n} = \{(i,j)\in\Omega \mid i+j =n \} $$

### EJERCICIOS
  Calcular la ley de las siguientes variables aleatorias:
1. **La diferencia de las caras es mayor a 1**

Definimos la variable aleatoria $D$ como la diferencia entre las caras de los dos dados:

$$D=|X_1 - X_2|$$

Queremos encontrar la probabilidad de que esta diferencia sea mayor a 1.

Para cada $k$ en el conjunto $\{2,3,4,5,6,7,8,9,10,11,12\}$, definimos el evento $E_k$

$$E_{k} = \{(i,j)\in\Omega \mid |i+j| >1 \} $$

Para hacer esto, es útil observar los pares $(i,j)$ que no cumplen esta condición, es decir, aquellos que tienen una diferencia de 0 o 1.

**Diferencia de 0:**
Esto sucede cuando $i=j$. Hay 6 posibles pares $(1,1), (2,2,), (3,3), (4,4), (5,5), (6,6)$

**Diferencia de 1:**
Esto sucede cuando $|i+j|=1$ Los pares son: $(2,1), (3,2), (4,3), (5,4), (6,5), (1,2), (2,3), (3,4), (,4,5), (5,6)$

Obteniendo estos dos casos los que tenemos es que la $$P(D>1)= \frac{6}{36}+ \frac{10}{36} = \frac{16}{36}$$

Por lo tanto para obtener la probabilidad de que 
$$P(D>1) = 1- P(D>1)$$

$$P(D>1) = 1- \frac{16}{36}=\frac{20}{36}$$


2. **La suma de las caras sea par**

Definimos la variable aleatoria $S$ como la suma de las caras de los dados:

$$S=X_1+X_2$$

Los números pares en el rango de suma son: $2,4,6,8,10,12$

Vamos a contar los pares $(i,j)$ que tienen una suma par para cada caso:

**Suma = 2** -> $(1,1)$

**Suma = 4** -> $(1,3), (3,1), (2,2)$

**Suma = 6** -> $(1,5), (2,4), (3,3), (4,2), (5,1)$

**Suma = 8** -> $(2,6), (4,4), (6,2), (3,5), (5,3)$

**Suma = 10** -> $(4,6), (5,5), (6,4)$

**Suma = 12** -> $(6,6)$


Ya que se tienen todos los pares de las sumas 

$$P(S) = P(S=2) + P(S=4) + P(S=6) + P(S=8) + P(S=10) + P(S=12)$$

$$P(S)=\frac{1}{36}+\frac{3}{36}+\frac{5}{36}+\frac{5}{36}+\frac{3}{36}+ \frac{1}{36}= \frac{18}{36}$$

import numpy as np

3.  **Verifica en cada caso, que**
   $$\sum_{k\in R_{X}}\mathbb{P}(X=k) = 1$$


Para verificar que la suma de las probabilidades de todos los posibles valores de una variable aleatoria  $X$ sea 1, primero debes entender y calcular la ley de la variable aleatoria en cuestión. En el contexto de lanzar dos dados, tenemos dos variables aleatorias a verificar:

La diferencia entre las caras $D=|X_1 - X_2|$ 

La suma de las caras $$S=X_1+X_2$$

Vamos a verificar que la suma de las probabilidades de todos los posibles valores de $D$ y $S$ sea 1

**Para la diferencia $D = |X_1 - X_2|$**

# Definimos los dados
dados = np.arange(1, 7)
dados

# Generamos todas las combinaciones posibles de los dados
combinaciones = [(i, j) for i in dados for j in dados]
combinaciones

# Total de combinaciones
total_combinaciones = len(combinaciones)
total_combinaciones

# Inicializamos el diccionario para las diferencias
dS = {k: set() for k in range(6)} 
dS

# Llena el diccionario dS con las combinaciones que dan cada diferencia
for i, j in combinaciones:
    dS[abs(i - j)].add((i, j))

# Calculamos la ley de la variable aleatoria D
leyD = {k: len(v) / total_combinaciones for k, v in dS.items()}
leyD

# Imprimimos los resultados
print("Ley de la diferencia D = |X1 - X2|:")
for k, prob in sorted(leyD.items()):
    print(f'P(D={k}) = {prob:.2f}')

# Verificar que la suma de las probabilidades sea 1
suma_probabilidades_D = sum(leyD.values())
print(f'Suma de las probabilidades de la diferencia: {suma_probabilidades_D:.2f}')

**Para la suma $S=X_1 + X_2$**
# Inicializamos el diccionario para las sumas
dS = {k: set() for k in range(2, 13)}  # Sumas posibles: 2 a 12
dS

# Llena el diccionario dS con las combinaciones que dan cada suma
for i, j in combinaciones:
    dS[i + j].add((i, j))

# Calculamos la ley de la variable aleatoria S
leyS = {k: len(v) / total_combinaciones for k, v in dS.items()}
leyS

# Imprimimos los resultados
print("Ley de la suma S = X1 + X2:")
for k, prob in sorted(leyS.items()):
    print(f'P(S={k}) = {prob:.2f}')

# Verificar que la suma de las probabilidades sea 1
suma_probabilidades_S = sum(leyS.values())
print(f'Suma de las probabilidades de la suma: {suma_probabilidades_S:.2f}')

4. **Gráfica y calcula la función de distribución de la v.a. S**

Para calcular la Función de Distribución, primeramente se necesita la Función de Densidad. 

**Función de Densidad**
$$P(S=k)=\frac{Núm. combinaciones, tal que (i+j=k)}{Núm. total de combinaciones}$$

**Función de Distribución (acumulada)**
$$F_S (k) = \sum_{j=2}^{k}P(S=j)$$

Por lo tanto para la Funcion de Distribucion, tenemos que:

# Calculamos la ley de la variable aleatoria S
leyS = {k: len(v) / total_combinaciones for k, v in dS.items()}
leyS

# Calculamos la función de distribución acumulada
valores_S = sorted(leyS.keys())
cdf_S = []
suma_acumulada = 0
for valor in valores_S:
    suma_acumulada += leyS[valor]
    cdf_S.append(suma_acumulada)

import matplotlib.pyplot as plt
# Graficar la distribucion acumulada
plt.figure(figsize=(10, 6))
plt.step(valores_S, cdf_S, where='post', label='F.Dist de S', color='blue', linewidth=2)
plt.xlabel('Suma de las caras (S)')
plt.ylabel('Función de Distribución Acumulada (CDF)')
plt.title('Función de Distribución Acumulada (CDF) de la Suma de dos dados')
plt.grid(True)
plt.legend()
plt.show()
